import tkinter as tk
from tkinter import ttk
from tkinter import scrolledtext
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import numpy as np

class GuiApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Gray-Hat Pentesting Tool")
        self.create_widgets()

    def create_widgets(self):
        # IP Entry
        ttk.Label(self.root, text="Enter IP:").grid(row=0, column=0, padx=10, pady=5)
        self.ip_entry = ttk.Entry(self.root, width=40)
        self.ip_entry.grid(row=0, column=1, padx=10, pady=5)

        # Data Information Display
        ttk.Label(self.root, text="Data Information:").grid(row=1, column=0, padx=10, pady=5, columnspan=2)
        self.data_info = scrolledtext.ScrolledText(self.root, width=60, height=20)
        self.data_info.grid(row=2, column=0, padx=10, pady=5, columnspan=2)

        # Buttons for running tools
        ttk.Button(self.root, text="Run Hydra", command=self.run_hydra).grid(row=3, column=0, padx=10, pady=5, sticky="ew")
        ttk.Button(self.root, text="Run Hashcat", command=self.run_hashcat).grid(row=4, column=0, padx=10, pady=5, sticky="ew")
        ttk.Button(self.root, text="Run Zap", command=self.run_zap).grid(row=5, column=0, padx=10, pady=5, sticky="ew")
        ttk.Button(self.root, text="Run Wireshark", command=self.run_wireshark).grid(row=6, column=0, padx=10, pady=5, sticky="ew")
        ttk.Button(self.root, text="Run Nmap", command=self.run_nmap).grid(row=7, column=0, padx=10, pady=5, sticky="ew")

        # Execute and Exit Code buttons
        ttk.Button(self.root, text="Execute", command=lambda: self.display_output("Executing...")).grid(row=8, column=1, padx=10, pady=5, sticky="e")
        ttk.Button(self.root, text="Exit Code", command=self.root.quit).grid(row=8, column=0, padx=10, pady=5, sticky="w")

        # Placeholder for matplotlib plot (optional)
        self.fig, self.ax = plt.subplots()
        self.canvas = FigureCanvasTkAgg(self.fig, master=self.root)
        self.canvas.get_tk_widget().grid(row=9, column=0, columnspan=2, pady=10)

        # Example plot (you can update this with actual data)
        x = np.linspace(0, 10, 100)
        y = np.sin(x)
        self.ax.plot(x, y)
        self.canvas.draw()

    def run_hydra(self):
        self.display_output("Running Hydra...")

    def run_hashcat(self):
        self.display_output("Running Hashcat...")

    def run_zap(self):
        self.display_output("Running Zap...")

    def run_wireshark(self):
        self.display_output("Running Wireshark...")

    def run_nmap(self):
        self.display_output("Running Nmap...")

    def display_output(self, message):
        self.data_info.insert(tk.END, message + "\n")
        self.data_info.see(tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    app = GuiApp(root)
    root.mainloop()
