import argparse
import sys
import logging
import traceback
import six
import tkinter as tk
from tkinter import messagebox
from gui.gui import GuiApp
from func.func import PenetrationTestingTool


def main():
    try:
        parser = argparse.ArgumentParser(
            description="Penetration Testing Tool"
        )

        parser.add_argument(
            "--scan-ports", action="store_true",
            help="Enable port scanning"
        )

        parser.add_argument(
            "--run-hydra", action="store_true",
            help="Enable Hydra execution"
        )

        parser.add_argument(
            "--run-hashcat", action="store_true",
            help="Enable Hashcat execution"
        )

        parser.add_argument(
            "--scan-web-app", action="store_true",
            help="Scan web application for XSS vulnerabilities"
        )

        parser.add_argument(
            "--gui", action="store_true",
            help="Enable GUI mode"
        )

        parser.add_argument(
            "--run-ettercap", action="store_true",
            help="Enable Ettercap execution"
        )

        parser.add_argument(
            "--interface", help="Specify the network interface for Ettercap"
        )

        parser.add_argument(
            "--output", help="Specify the output file name"
        )

        parser.add_argument(
            "--port", type=int, help="Specify the port number"
        )

        parser.add_argument(
            "--ip", help="Specify the IP address to scan"
        )

        parser.add_argument(
            "--port-end", type=int,
            help="Specify the end port number"
        )

        parser.add_argument(
            "--timeout", type=float,
            help="Specify the timeout for port scanning in seconds"
        )

        args = parser.parse_args()
        args.output = args.output or "Info.json"
        args.port = args.port or 80
        args.port_end = args.port_end or 65535
        args.timeout = args.timeout or 1.0

        penetration_tool = PenetrationTestingTool(args)
        penetration_tool.run()

        if args.gui:
            root = tk.Tk()
            gui = GuiApp(root)
            root.mainloop()

    except Exception as e:
        logging.exception("An unexpected error occurred:")
        traceback.print_exc()
        messagebox.showerror("Error", f"An error occurred: {e}")
        sys.exit(1)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    main()
